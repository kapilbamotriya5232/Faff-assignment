// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  tasks         Task[]    @relation("UserTasks")
  assignedTasks Task[]    @relation("AssignedTasks")
  messagesSent  Message[] @relation("UserSentMessages") // Explicit relation name
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Task {
  id            String    @id @default(cuid())
  title         String
  status        String    @default("Logged")
  priority      String?
  tags          String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  requestedById String
  requestedBy   User      @relation("UserTasks", fields: [requestedById], references: [id])
  assignedToId  String?
  assignedTo    User?     @relation("AssignedTasks", fields: [assignedToId], references: [id])
  messages      Message[] @relation("TaskMessages") // Explicit relation name
  @@index([requestedById])
  @@index([assignedToId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender    User     @relation("UserSentMessages", fields: [senderId], references: [id]) // Matching explicit name
  senderId  String   // Foreign key to User
  
  task      Task     @relation("TaskMessages", fields: [taskId], references: [id], onDelete: Cascade) // Matching explicit name, added onDelete
  taskId    String   // Foreign key to Task

  // For threading (Phase 5)
  parentId  String?
  parent    Message? @relation("Replies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Message[] @relation("Replies")

  @@index([senderId])
  @@index([taskId])
  @@index([parentId])
}